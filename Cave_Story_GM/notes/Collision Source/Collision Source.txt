From: 
https://www.cavestory.org/forums/threads/explanation-or-source-code-for-quotes-movement.5476/

void PInitRepel(void)
{
const int s = SPR_MYCHAR;
int i;
player->nrepel_l = sprites[s].block_l.count;
player->nrepel_r = sprites[s].block_r.count;
player->nrepel_d = sprites[s].block_d.count;
player->nrepel_u = sprites[s].block_u.count;

for(i=0;i<player->nrepel_l;i++)
{
  player->repel_l[i].x = sprites[s].block_l[i].x + 1;
  player->repel_l[i].y = sprites[s].block_l[i].y;
}

for(i=0;i<player->nrepel_r;i++)
{
  player->repel_r[i].x = sprites[s].block_r[i].x - 1;
  player->repel_r[i].y = sprites[s].block_r[i].y;
}

for(i=0;i<player->nrepel_d;i++)
{
  player->repel_d[i].x = sprites[s].block_d[i].x;
  player->repel_d[i].y = sprites[s].block_d[i].y - 1;
}

for(i=0;i<player->nrepel_u;i++)
{
  player->repel_u[i].x = sprites[s].block_u[i].x;
  player->repel_u[i].y = sprites[s].block_u[i].y + 1;
}
}
// the player's block points are assymetrical--block u/d are closer together than block l/r.
// So it's quite possible to get e.g. your blockl points embedded in a wall by
// falling off the top of it. This function implements a SMB1-style "repel" that
// allows this to happen but then pushes the player out of the block over the next
// few frames.
void PDoRepel(void)
{
// since this function is called from the aftermove, regular player->blockl etc
// won't be updated until the following frame, so we always check the attributes
// directly here.
static const int REPEL_SPEED = (1<<CSF);

if (settings->enable_debug_keys && inputs[DEBUG_MOVE_KEY])
  return;

// pushes player out of walls if he become embedded in them, ala Super Mario 1.
// this can happen for example because his R,L block points are further out than
// his D block points so it's possible to fall really close to a block and
// embed the R or L points further into the block than they should be
if (player->CheckAttribute(player->repel_r, player->nrepel_r, TA_SOLID_PLAYER))
{
  if (!player->CheckAttribute(&sprites[player->sprite].block_l, TA_SOLID_PLAYER))
  {
   player->x -= REPEL_SPEED;
   //debug("REPEL [to left]");
  }
}

if (player->CheckAttribute(player->repel_l, player->nrepel_l, TA_SOLID_PLAYER))
{
  if (!player->CheckAttribute(&sprites[player->sprite].block_r, TA_SOLID_PLAYER))
  {
   player->x += REPEL_SPEED;
   //debug("REPEL [to right]");
  }
}

// vertical repel doesn't happen normally, but if we get embedded in a
// block somehow, it can happen.
/*
// do repel down
if (player->CheckAttribute(player->repel_u, player->nrepel_u, TA_SOLID_PLAYER))
{
  if (!player->CheckAttribute(&sprites[player->sprite].block_d, TA_SOLID_PLAYER))
  {
   player->y += REPEL_SPEED;
   //debug("REPEL [down]");
  }
}

// do repel up
if (player->CheckAttribute(player->repel_d, player->nrepel_d, TA_SOLID_PLAYER))
{
  if (!player->CheckAttribute(&sprites[player->sprite].block_u, TA_SOLID_PLAYER))
  {
   player->y -= REPEL_SPEED;
   //debug("REPEL [up]");
  }
}
*/
}